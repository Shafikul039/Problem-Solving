#include<bits/stdc++.h>

using namespace std;
#define ll long long
const ll M = 998244353;

struct node {
    bool endmark;
    node *next[2];
    node (){
            endmark = false;
            for (int i = 0; i < 2; i++) {
            next[i] = NULL;
        }
    }
};
node *root;

void insert(string s) {
    node *cur = root;
    for (int i = 0; i < s.size(); i++) {
        int id = s[i] - '0';
        if (cur->next[id] == NULL) cur->next[id] = new node();
        cur = cur->next[id];
    }
    cur->endmark = true;
}

ll search (string s, ll len) {
        ll ans = 0, curbit = 59;
        node *cur = root;
        for (int i = 0; i < 60; i++) {
            int id = s[i] - '0';
            if (len > 0 && cur->next[id] == NULL) return 2e18;
            if (len > 0 && cur->next[id] != NULL) {
                cur = cur->next[id];
                len--;
                curbit--;
                continue;
            }
            if (cur->next[!id] != NULL) {
                if (ans == 0) ans += (1LL << curbit);
                else ans -= (1LL << curbit);
                cur = cur->next[!id];
            }
            else if (cur->next[id] != NULL) {
                cur = cur->next[id];
            }
            else return 2e18;
            curbit--;
        }
        return ans;
}

void del(node* cur)
{
    for (int i = 0; i < 2; i++)
        if (cur->next[i])
            del(cur->next[i]);
    delete (cur);
}

string bin(ll n) {
    string ans = "";
    for (int i = 59; i >= 0; i--) {
        ans += ((n >> i) & 1) ? '1' : '0';
    }
    return ans;
}

int main() {
    ll t = 1;
    cin >> t;
    ll tt = t;
    while (t--) {
        root = new node();
        cout << "Case " << tt - t << ": ";
        ll n; cin >> n;
        vector<ll> a(n);
        ll ans = 2e18;
        for (int i = 0; i < n; i++) {
            cin >> a[i];
            string s = bin(a[i]);
            for (ll len = 0; len <= 60; len++) {
                ans = min (ans, search(s, len));
                if (ans == 2e18) break;
            }
            insert(s);
        }
        if (n == 1) cout << 0 << endl;
        else cout << ans << endl;
        del(root);
    }
}
